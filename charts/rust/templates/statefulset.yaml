apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "rust.fullname" . }}
  labels:
    {{- include "rust.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "rust.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "rust.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rust.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rust.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "+server.ip"
            - "0.0.0.0"
            - "+server.port"
            - "{{ .Values.rustDedicatedServer.serverPort }}"
            - "+server.queryport"
            - "{{ .Values.rustDedicatedServer.serverQueryPort}}"
            - "+server.hostname"
            - "{{ .Values.rustDedicatedServer.hostName }}"
            - "+server.maxplayers"
            - "{{ .Values.rustDedicatedServer.maxPlayers }}"
            - "+server.worldsize"
            - "{{ .Values.rustDedicatedServer.worldSize }}"
            - "+server.gamemode"
            - "{{ .Values.rustDedicatedServer.gameMode }}"
            - "+server.seed"
            - "{{ .Values.rustDedicatedServer.seed }}"
            - "+server.identity"
            - "dedicated"
            - "+rcon.ip"
            - "0.0.0.0"
            - "+rcon.port"
            - "{{ .Values.rustDedicatedServer.rconPort }}"
            - "+rcon.password"
            - "$(RCON_PASSWORD)"
            - "+rcon.web"
            - "{{ .Values.rustDedicatedServer.rconWeb }}"
            - "+app.port"
            - "{{ .Values.rustDedicatedServer.appPort }}"
          env:
            - name: RCON_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ ternary (include "rust.fullname" .) .Values.rustDedicatedServer.existingSecret (empty .Values.rustDedicatedServer.existingSecret) }}
                  key: rconPassword
          ports:
            - name: server-port
              containerPort: {{ .Values.rustDedicatedServer.serverPort }}
              protocol: UDP
            - name: rcon-port
              containerPort: {{ .Values.rustDedicatedServer.rconPort }}
              protocol: TCP
            - name: query-port
              containerPort: {{ .Values.rustDedicatedServer.serverQueryPort }}
              protocol: UDP
            - name: app-port
              containerPort: {{ .Values.rustDedicatedServer.appPort }}
              protocol: TCP
          startupProbe:
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            exec:
              command:
                - "nc"
                - "-nuzv"
                - "127.0.0.1"
                - "{{ .Values.rustDedicatedServer.serverPort }}"
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            exec:
              command:
                - "nc"
                - "-nuzv"
                - "127.0.0.1"
                - "{{ .Values.rustDedicatedServer.serverPort }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: server-identity
              mountPath: "/srv/rust/server/dedicated"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: server-identity
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: {{ .Values.rustDedicatedServer.volumeStorageSize }}