# Default values for rust.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: "pfeiffermax/rust-game-server"
  # This sets the pull policy for images.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  # Please see Docker Hub for available tags: https://hub.docker.com/r/pfeiffermax/rust-game-server/tags
  tag: "latest"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: LoadBalancer
  # See: https://kubernetes.io/docs/concepts/services-networking/service/#traffic-policies
  externalTrafficPolicy: Cluster
  metadata:
    annotations: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Rust dedicated server startup is slow, so you might need to bump up periodSeconds and failureThreshold
# for larger worldsize.
startupProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 100
  successThreshold: 1

livenessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  successThreshold: 1

rustDedicatedServer:
  # You can use just one single string without any spaces as this is specified as command line option.
  hostName: "Vanilla-Rust-Server"
  # Rust main server port
  serverPort: "28015"
  # Rust Rcon port
  rconPort: "28016"
  # Rust server query port
  serverQueryPort: "28017"
  # Port for Rust+ app
  appPort: "28082"
  # Maximum number of players
  maxPlayers: "20"
  # World size
  worldSize: "3000"
  # Map seed, always use a string here as Helm number conversion might produce incompatible strings.
  seed: "666"
  # Use 1 to switch on websocket rcon, 0 to switch off websocket rcon
  rconWeb: "1"
  # Rcon Password
  rconPassword: "yourpassword"
  # Volume size for server identity directory. Rust server stores it's config, saves and blueprints there
  volumeStorageSize: "1Gi"
  # Name of the existing secret to use for the rconPassword.
  # If this is set, rustDedicatedServer.rconPassword will be ignored.
  # The existing secret needs to have stored Rust rconPassword under the key rconPassword.
  existingSecret: ""
